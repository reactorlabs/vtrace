name: build

on:
  - pull_request
  - push
  - workflow_dispatch

jobs:
  build:
    name: Build vtrace package

    # This is a hack to get an "environment variable" that can be accessed by
    # "runs-on"; normally env variables can only be accessed at the "step" level
    strategy:
      matrix:
        os: [ubuntu-20.04]

    runs-on: ${{ matrix.os }}

    steps:
      # https://cran.r-project.org/bin/linux/ubuntu/fullREADME.html
      # https://github.com/rocker-org/rocker/blob/master/r-devel/Dockerfile
      - name: Add PPA and build dependencies
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \
            E298A3A825C0D65DFD57CBB651716619E084DAB9
          sudo add-apt-repository \
            'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/'
          sudo apt-get update -q
          sudo apt-get install r-base r-base-dev build-essential default-jdk \
            g++ gcc gdb gfortran groff-base libblas-dev libbz2-dev \
            libcairo2-dev libcurl4-openssl-dev libjpeg-dev liblapack-dev \
            liblzma-dev libncurses5-dev libpango1.0-dev libpcre3-dev \
            libpng-dev libreadline-dev libtiff5-dev libx11-dev libxt-dev mpack \
            subversion tcl8.6-dev texinfo texlive-base texlive-extra-utils \
            texlive-fonts-extra texlive-fonts-recommended \
            texlive-plain-generic texlive-latex-base texlive-latex-extra \
            texlive-latex-recommended tk8.6-dev x11proto-core-dev xauth \
            xdg-utils xfonts-base xvfb zlib1g-dev

      - name: Checkout R-dyntrace
        uses: actions/checkout@v2
        with:
          repository: PRL-PRG/R-dyntrace
          ref: r-4.0.2
          path: R-dyntrace

      - name: Get R-dyntrace hash
        id: get-rdt-hash
        run: |
          cd R-dyntrace
          git log -1 --format='%H'
          echo "::set-output name=rdt-hash::$(git log -1 --format='%H')"

      - name: Cache R-dyntrace
        id: cache-rdt
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/R-dyntrace
          key: ${{ matrix.os }}-cache-v2-${{ steps.get-rdt-hash.outputs.rdt-hash }}
          restore-keys: |
            ${{ matrix.os }}-cache-v2-
            ${{ matrix.os }}-

      - name: Build R-dyntrace
        if: steps.cache-rdt.outputs.cache-hit != 'true'
        run: |
          cd R-dyntrace
          ./build

      - name: Checkout injectr
        if: steps.cache-rdt.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: PRL-PRG/injectr
          path: injectr

      - name: Install injectr
        if: steps.cache-rdt.outputs.cache-hit != 'true'
        run: ${{ github.workspace }}/R-dyntrace/bin/R CMD INSTALL injectr

      - name: Checkout instrumentr
        if: steps.cache-rdt.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: PRL-PRG/instrumentr
          path: instrumentr

      - name: Install instrumentr
        if: steps.cache-rdt.outputs.cache-hit != 'true'
        run: ${{ github.workspace }}/R-dyntrace/bin/R CMD INSTALL instrumentr

      - name: Checkout vtrace
        uses: actions/checkout@v2
        with:
          path: vtrace

      - name: Build vtrace
        run: ${{ github.workspace }}/R-dyntrace/bin/R CMD INSTALL vtrace
